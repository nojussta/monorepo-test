name: Build

on:
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      fe1_changed: ${{ steps.filter.outputs.fe1_changed }}
      fe2_changed: ${{ steps.filter.outputs.fe2_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: filter
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q '^apps/fe1/'; then
            echo "fe1_changed=true" >> $GITHUB_OUTPUT
          else
            echo "fe1_changed=false" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q '^apps/fe2/'; then
            echo "fe2_changed=true" >> $GITHUB_OUTPUT
          else
            echo "fe2_changed=false" >> $GITHUB_OUTPUT
          fi

  build-fe1:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe1_changed == 'true'
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: apps/fe1
    steps:
      - name: Checkout frontend directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.WORKING_DIRECTORY }}
          sparse-checkout-cone-mode: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci
      - name: Build frontend app
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build

  build-fe2:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe2_changed == 'true'
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: apps/fe2
    steps:
      - name: Checkout frontend directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.WORKING_DIRECTORY }}
          sparse-checkout-cone-mode: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci
      - name: Build frontend app
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build
