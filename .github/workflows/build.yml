name: Build

on:
  push:

env:
  FE1_PATHS: |
    apps/fe1
    tools
  FE2_PATHS: |
    apps/fe2
    tools

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      fe1_changed: ${{ steps.filter.outputs.fe1_changed }}
      fe2_changed: ${{ steps.filter.outputs.fe2_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter which workflows to run
        id: filter
        env:
          PREVIOUS_COMMIT: ${{ github.event.before }}
        shell: pwsh
        run: |
          Write-Host "Checking for changes in frontend apps..."

          if ($env:GITHUB_REF_NAME -ne "main") {
              $baseRef = $env:PREVIOUS_COMMIT
              $headRef = $env:GITHUB_SHA
          }
          else {
              $baseRef = "origin/main~1"
              $headRef = "origin/main"
          }

          $changedFiles = git diff --name-only $baseRef $headRef
                              
          $apps = @("FE1_PATHS", "FE2_PATHS")
          foreach ($app in $apps) {
              $changed = $false
              $paths = ${env:$app} -split "`n" | Where-Object { $_ -ne "" }
              foreach ($path in $paths) {
                  if ($changedFiles -match "^$path") {
                      $changed = $true
                      break
                  }
              }
              $key = $app.ToLower() -replace "_paths", ""
              Add-Content -Path $env:GITHUB_OUTPUT -Value "$key`_changed=$changed"
          }
          printenv

  build-fe1:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe1_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    env:
      WORKING_DIRECTORY: apps/fe1
    steps:
      - name: Checkout frontend directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.WORKING_DIRECTORY }}
          sparse-checkout-cone-mode: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install dependencies
        run: npm ci
      - name: Build frontend app
        run: npm run build

  build-fe2:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe2_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    env:
      WORKING_DIRECTORY: apps/fe2
    steps:
      - name: Checkout frontend directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.WORKING_DIRECTORY }}
          sparse-checkout-cone-mode: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install dependencies
        run: npm ci
      - name: Build frontend app
        run: npm run build
