name: Build

on:
  push:

env:
  FE1_PATHS: "apps/fe1, tools"
  FE2_PATHS: "apps/fe2, tools"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      fe1_changed: ${{ steps.filter.outputs.fe1_changed }}
      fe2_changed: ${{ steps.filter.outputs.fe2_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter which workflows to run
        id: filter
        env:
          PREVIOUS_COMMIT: ${{ github.event.before }}
        shell: pwsh
        run: |
          Write-Host "Checking for changes in apps...`n"

          $NULL_SHA = '0000000000000000000000000000000000000000'

          if ($env:GITHUB_REF_NAME -ne "main") {
              if ([string]::IsNullOrEmpty($env:PREVIOUS_COMMIT) -or $env:PREVIOUS_COMMIT -eq $NULL_SHA) {
                  $baseRef = "origin/main"
              } else {
                  $baseRef = $env:PREVIOUS_COMMIT
              }
              $headRef = $env:GITHUB_SHA
          }
          else {
              $baseRef = "origin/main~1"
              $headRef = "origin/main"
          }

          Write-Host "Base ref: $baseRef"
          Write-Host "Head ref: $headRef`n"

          $changedFiles = git diff --name-only $baseRef $headRef | Where-Object { $_ -ne "" }

          $apps = @('FE1_PATHS', 'FE2_PATHS')
          foreach ($app in $apps) {
              $appName = $app.ToLower() -replace "_paths", ""
              $changed = $false
              $paths = ([System.Environment]::GetEnvironmentVariable($app) -split ",") | ForEach-Object { $_.Trim() } | Where-Object { $_ -ne "" }
              
              foreach ($path in $paths) {
                  foreach ($file in $changedFiles) {
                      if ($file.StartsWith($path)) {
                          Write-Host "Changes detected: $($file)"
                          $changed = $true
                          break
                      }
                  }
                  if ($changed) { break }
              }

              Add-Content -Path $env:GITHUB_OUTPUT -Value ($appName + "_changed=$changed")
          }

  build-fe1:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe1_changed == 'true'
    # runs-on: ubuntu-latest
    # uses: nojussta/monorepo-test/apps/fe1/.github/workflows/build-frontend.yml@${{ github.sha }}
    uses: ./apps/fe1/.github/workflows/build-frontend.yml
    # steps:
    #   - name: Dispatch workflow
    #     uses: actions/github-script@v7
    #     with:
    #       github-token: ${{ github.token }}
    #       script: |
    #         await github.rest.actions.createWorkflowDispatch({
    #           owner: 'nojussta',
    #           repo: 'monorepo-test',
    #           workflow_id: 'apps/fe1/.github/workflows/build-frontend.yml',
    #           ref: '${{ github.ref_name }}'
    #         })

  build-fe2:
    needs: detect-changes
    if: needs.detect-changes.outputs.fe2_changed == 'true'
    # uses: nojussta/monorepo-test/apps/fe2/.github/workflows/build-frontend.yml@${{ github.sha }}
    uses: ./apps/fe2/.github/workflows/build-frontend.yml
